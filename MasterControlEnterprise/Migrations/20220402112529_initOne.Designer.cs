// <auto-generated />
using System;
using MasterControlEnterprise.Model.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterControlEnterprise.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220402112529_initOne")]
    partial class initOne
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MasterControlEnterprise.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("IdentificationType")
                        .HasColumnType("int");

                    b.Property<string>("IdentityDocument")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("image")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.HasIndex("PhoneId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("image")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Direction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Avenue")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("floor")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.LogAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("LogActionType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LogActions");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NotificationState")
                        .HasColumnType("int");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("SolutionMessage")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.NotificationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationUserState")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NotifyAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationUsers");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cod_Country")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("WhatsApp")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AlertInventory")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IVA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Inventory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("IdentityDocument")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int");

                    b.Property<int>("identificationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.HasIndex("PhoneId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateShop")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseState")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("dateRecived")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.PurchaseProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Seller")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("purchaseProducts");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SaleState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("userId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.SaleProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Impuesto")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleProducts");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.SecurityQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SecurityQuestions");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("DeleteState")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdentificationType")
                        .HasColumnType("int");

                    b.Property<string>("IdentityDocument")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Image")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasMaxLength(2)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.HasIndex("PhoneId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductProvider", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ProvidersId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ProvidersId");

                    b.HasIndex("ProvidersId");

                    b.ToTable("ProductProvider");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Client", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Direction", "Direction")
                        .WithMany("Clients")
                        .HasForeignKey("DirectionId");

                    b.HasOne("MasterControlEnterprise.Model.Phone", "Phone")
                        .WithMany("Clients")
                        .HasForeignKey("PhoneId");

                    b.Navigation("Direction");

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.LogAction", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.User", "User")
                        .WithMany("LogActions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.NotificationUser", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Notification", "Notification")
                        .WithMany("Sales")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterControlEnterprise.Model.User", "User")
                        .WithMany("Notificatio")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Provider", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Direction", "Direction")
                        .WithMany("Providers")
                        .HasForeignKey("DirectionId");

                    b.HasOne("MasterControlEnterprise.Model.Phone", "Phone")
                        .WithMany("Providers")
                        .HasForeignKey("PhoneId");

                    b.Navigation("Direction");

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Purchase", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Provider", "Provider")
                        .WithMany("Purchases")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.PurchaseProduct", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Product", "Product")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterControlEnterprise.Model.Purchase", "Purchase")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Sale", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Client", "Client")
                        .WithMany("Shops")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterControlEnterprise.Model.User", "User")
                        .WithMany("Sales")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.SaleProduct", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Product", "Product")
                        .WithMany("SaleProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterControlEnterprise.Model.Sale", "Sale")
                        .WithMany("SaleProducts")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.SecurityQuestion", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.User", "User")
                        .WithMany("SecurityQuestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.User", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Direction", "Direction")
                        .WithMany("Users")
                        .HasForeignKey("DirectionId");

                    b.HasOne("MasterControlEnterprise.Model.Phone", "Phone")
                        .WithMany("Users")
                        .HasForeignKey("PhoneId");

                    b.Navigation("Direction");

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("ProductProvider", b =>
                {
                    b.HasOne("MasterControlEnterprise.Model.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterControlEnterprise.Model.Provider", null)
                        .WithMany()
                        .HasForeignKey("ProvidersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Client", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Direction", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Providers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Notification", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Phone", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Providers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Product", b =>
                {
                    b.Navigation("PurchaseProducts");

                    b.Navigation("SaleProducts");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Provider", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Purchase", b =>
                {
                    b.Navigation("PurchaseProducts");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.Sale", b =>
                {
                    b.Navigation("SaleProducts");
                });

            modelBuilder.Entity("MasterControlEnterprise.Model.User", b =>
                {
                    b.Navigation("LogActions");

                    b.Navigation("Notificatio");

                    b.Navigation("Sales");

                    b.Navigation("SecurityQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
